name: publish

on:
  push:
    branches: [ "dev" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  ADMIN_DOCKERFILE: Dockerfile.admin
  BOT_DOCKERFILE: Dockerfile.bot
  ADMIN_IMAGE_NAME: ${{ github.actor }}/admin-api:latest
  BOT_IMAGE_NAME: ${{ github.actor }}/bot-manager:latest

jobs:
    publish:
        name: publish images
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v3
        - name: Login
          run: |
            echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        - name: Build and Publish
          run: |
            docker build . -f ${{ env.ADMIN_DOCKERFILE }} --tag ${{ env.REGISTRY }}/${{ env.ADMIN_IMAGE_NAME }}
            docker push ${{ env.REGISTRY }}/${{ env.ADMIN_IMAGE_NAME }}
            docker build . -f ${{ env.BOT_DOCKERFILE }} --tag ${{ env.REGISTRY }}/${{ env.BOT_IMAGE_NAME }}
            docker push ${{ env.REGISTRY }}/${{ env.BOT_IMAGE_NAME }}

    deploy:
        needs: publish
        name: deploy image
        runs-on: ubuntu-latest

        steps:
        - name: install ssh keys
          run: |
            install -m 600 -D /dev/null ~/.ssh/id_rsa
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
        - name: connect and pull
          run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} \
              && echo ${{ secrets.PAT }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin \
              && docker compose pull && docker compose up -d && exit"
        - name: cleanup
          run: rm -rf ~/.ssh